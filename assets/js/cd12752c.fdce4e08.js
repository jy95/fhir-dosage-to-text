"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6614],{844:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>f,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>g,toc:()=>h});var o=t(4848),i=t(8453),r=t(1812);const s=JSON.parse('{"extension":[{"url":"https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverride","valueBoolean":true},{"url":"https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverrideReason","valueCodeableConcept":{"text":"Respect my authority ! - Eric Cartman"}}]}');var a=t(4865),u=t(9365),l=t(816);const c={description:"Function to turn extension(s) into a string for humans.",title:"\ud83d\udd0c fromExtensionsToString"},d=void 0,g={id:"custom/fromExtensionsToString",title:"\ud83d\udd0c fromExtensionsToString",description:"Function to turn extension(s) into a string for humans.",source:"@site/docs/custom/fromExtensionsToString.mdx",sourceDirName:"custom",slug:"/custom/fromExtensionsToString",permalink:"/fhir-dosage-utils/docs/custom/fromExtensionsToString",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/custom/fromExtensionsToString.mdx",tags:[],version:"current",frontMatter:{description:"Function to turn extension(s) into a string for humans.",title:"\ud83d\udd0c fromExtensionsToString"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcbb fromCodeableConceptToString",permalink:"/fhir-dosage-utils/docs/custom/fromCodeableConceptToString"},next:{title:"\ud83d\udccf fromFHIRQuantityUnitToString",permalink:"/fhir-dosage-utils/docs/custom/fromFHIRQuantityUnitToString"}},f={},h=[];function m(e){const n={code:"code",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(a.A,{children:[(0,o.jsx)(u.A,{value:"text",label:"Human readable text",default:!0,children:(0,o.jsx)(l.A,{dosage:s,config:{displayOrder:["extension","timingExtension"],fromExtensionsToString:({extensions:e,language:n})=>{if(void 0===e||0===e.length)return;return e.map((e=>{switch(e.url){case"https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverride":let t=e.valueBoolean;return`[${n} translation of "dosageOverride" set to "${t}"]`;case"https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverrideReason":return e.valueCodeableConcept.text;default:return`[${n} translation of "${JSON.stringify(e)}"]`}})).join(" | ")}}})}),(0,o.jsx)(u.A,{value:"json",label:"Dosage",children:(0,o.jsx)(r.default,{language:"json",children:JSON.stringify(s,null,2)})}),(0,o.jsx)(u.A,{value:"config",label:"Configuration",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n    displayOrder: ["extension", "timingExtension"],\n    fromExtensionsToString: ({extensions, language}) => {\n        // If no extensions, skip it\n        if (extensions === undefined || extensions.length === 0) {\n            return undefined;\n        }\n\n        // Your own logic here ;)\n        const parts = extensions.map(extension => {\n            switch(extension.url) {\n                case "https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverride":\n                    let dosageOverride = extension.valueBoolean;\n                    return `[${language} translation of "dosageOverride" set to "${dosageOverride}"]`;\n                case "https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverrideReason":\n                    return extension.valueCodeableConcept.text;\n                default:\n                    return `[${language} translation of "${JSON.stringify(extension)}"]`;\n            }\n        });\n\n        return parts.join(" | ");\n    }\n}\n'})})})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},816:(e,n,t)=>{t.d(n,{A:()=>a});var o=t(6540),i=t(6300),r=t(1812),s=t(4848);function a(e){let{dosage:n,config:t,i18nConfig:a}=e;const[u,l]=(0,o.useState)(""),[c,d]=(0,o.useState)(t?.language||"en"),[g,f]=(0,o.useState)(null);(0,o.useEffect)((()=>{!async function(){const e=await i.A.build(t,a);f(e)}()}),[t]),(0,o.useEffect)((()=>{!async function(){if(g){const e=g.fromDosageToText(n);l(e)}}()}),[n,g]);return(0,s.jsxs)("div",{children:[(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsxs)("select",{value:c,onChange:e=>d(e.target.value),style:{marginRight:"10px"},children:[(0,s.jsx)("option",{value:"en",children:"English"}),(0,s.jsx)("option",{value:"fr",children:"French"}),(0,s.jsx)("option",{value:"nl",children:"Dutch"}),(0,s.jsx)("option",{value:"de",children:"German"})]}),(0,s.jsx)("button",{onClick:async()=>{if(g){await g.changeLanguage(c);const e=g.fromDosageToText(n);l(e)}},children:"Confirm"})]}),(0,s.jsx)("div",{style:{marginTop:"10px"},children:(0,s.jsx)(r.default,{language:"markup",children:(h=u,h.replace(/&quot;/g,'"').replace(/&amp;/g,"&").replace(/&#(\d+);/g,(function(e,n){return String.fromCharCode(n)})).replace(/&#x([0-9A-Fa-f]+);/g,(function(e,n){return String.fromCharCode(parseInt(n,16))})))})})]});var h}}}]);