"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6614],{844:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>c,default:()=>x,frontMatter:()=>l,metadata:()=>f,toc:()=>m});var o=n(4848),r=n(8453),i=n(1812);const s=JSON.parse('{"extension":[{"url":"https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverride","valueBoolean":true},{"url":"https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverrideReason","valueCodeableConcept":{"text":"Respect my authority ! - Eric Cartman"}}]}');var a=n(4865),u=n(9365),d=n(816);const l={description:"Function to turn extension(s) into a string for humans.",title:"\ud83d\udd0c fromExtensionsToString"},c=void 0,f={id:"custom/fromExtensionsToString",title:"\ud83d\udd0c fromExtensionsToString",description:"Function to turn extension(s) into a string for humans.",source:"@site/docs/custom/fromExtensionsToString.mdx",sourceDirName:"custom",slug:"/custom/fromExtensionsToString",permalink:"/fhir-dosage-utils/docs/custom/fromExtensionsToString",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/custom/fromExtensionsToString.mdx",tags:[],version:"current",frontMatter:{description:"Function to turn extension(s) into a string for humans.",title:"\ud83d\udd0c fromExtensionsToString"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcbb fromCodeableConceptToString",permalink:"/fhir-dosage-utils/docs/custom/fromCodeableConceptToString"},next:{title:"\ud83d\udccf fromFHIRQuantityUnitToString",permalink:"/fhir-dosage-utils/docs/custom/fromFHIRQuantityUnitToString"}},g={},m=[];function h(e){const t={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(a.A,{children:[(0,o.jsx)(u.A,{value:"text",label:"Human readable text",default:!0,children:(0,o.jsx)(d.A,{dosage:s,config:{displayOrder:["extension"],fromExtensionsToString:({extensions:e,language:t})=>{if(void 0===e||0===e.length)return;return e.map((e=>{switch(e.url){case"https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverride":let n=e.valueBoolean;return`[${t} translation of "dosageOverride" set to "${n}"]`;case"https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverrideReason":return e.valueCodeableConcept.text;default:return`[${t} translation of "${JSON.stringify(e)}"]`}})).join(" | ")}}})}),(0,o.jsx)(u.A,{value:"json",label:"Dosage",children:(0,o.jsx)(i.default,{language:"json",children:JSON.stringify(s,null,2)})}),(0,o.jsx)(u.A,{value:"config",label:"Configuration",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:'{\n    displayOrder: ["extension"],\n    fromExtensionsToString: ({extensions, language}) => {\n        // If no extensions, skip it\n        if (extensions === undefined || extensions.length === 0) {\n            return undefined;\n        }\n\n        // Your own logic here ;)\n        const parts = extensions.map(extension => {\n            switch(extension.url) {\n                case "https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverride":\n                    let dosageOverride = extension.valueBoolean;\n                    return `[${language} translation of "dosageOverride" set to "${dosageOverride}"]`;\n                case "https://www.ehealth.fgov.be/standards/fhir/medication/StructureDefinition/DosageOverrideReason":\n                    return extension.valueCodeableConcept.text;\n                default:\n                    return `[${language} translation of "${JSON.stringify(extension)}"]`;\n            }\n        });\n\n        return parts.join(" | ");\n    }\n}\n'})})})]})}function x(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);